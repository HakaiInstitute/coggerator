name: 'Test'
on: [pull_request]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-2019]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install GDAL (not windows)
        if: matrix.platform != 'windows-2019'
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: environment.yml
          auto-activate-base: false
      - name: Install GDAL (windows only)
        if: matrix.platform == 'windows-2019'
        shell: bash
        run: |
          curl -S -O https://download.gisinternals.com/sdk/downloads/release-1928-x64-dev.zip
          7z x -aoa release-1928-x64-dev.zip
          rustc -Vv
          cargo -V
          vswhere
          
          export GDAL_HOME=$PWD/release-1928-x64
          export PROJ_LIB=$GDAL_HOME/bin/proj7/share
          export PATH=$GDAL_HOME/bin:$GDAL_HOME/bin/gdal/apps:$PATH
          # Workaround for https://github.com/actions/virtual-environments/issues/3316
          export PATH=/c/msys64/mingw64/bin:$PATH
          
          gdalinfo --version
          export GDAL_VERSION=$(gdalinfo --version | sed 's/GDAL \(.*\), .*/\1/')
          
          echo "GDAL_HOME=$GDAL_HOME" >> $GITHUB_ENV
          echo "PROJ_LIB=$PROJ_LIB" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "GDAL_VERSION=$GDAL_VERSION" >> $GITHUB_ENV
      - name: Update pkg_config_path
        if: matrix.platform != 'windows-2019'
        run: echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$CONDA/envs/cog/lib/pkgconfig/" >> $GITHUB_ENV
      - name: Install frontend dependencies
        run: yarn install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
